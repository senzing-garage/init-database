version: "3"

services:

  # makefile makes a metadata file for pgadmin.

  makefile:
    container_name: senzing-makefile
    command:
      - sh
      - -c
      - mkdir /output/postgres_postgres.com; echo $${FILE_CONTENTS} > /output/postgres_postgres.com/servers.json
    environment:
      FILE_CONTENTS: >-
        {
          "Servers": {
            "1": {
              "Name": "senzing",
              "Group": "Servers",
              "Host": "senzing-postgres",
              "Port": 5432,
              "MaintenanceDB": "postgres",
              "Username": "postgres",
              "UseSSHTunnel": 0,
              "TunnelPort": "22",
              "TunnelAuthentication": 0,
              "KerberosAuthentication": false,
              "ConnectionParameters": {
                "sslmode": "prefer",
                "connect_timeout": 10,
                "sslcert": "<STORAGE_DIR>/.postgresql/postgresql.crt",
                "sslkey": "<STORAGE_DIR>/.postgresql/postgresql.key"
              },
              "Tags": []
            }
          }
        }
    image: busybox@sha256:d82f458899c9696cb26a7c02d5568f81c8c8223f8661bb2a7988b269c8b9051e
    networks:
      - senzing
    read_only: true
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - /tmp:/output

  postgres:
    container_name: senzing-postgres
    environment:
      # See https://github.com/bitnami/bitnami-docker-postgresql#configuration
      POSTGRESQL_DATABASE: G2
      POSTGRESQL_PASSWORD: senzing
      POSTGRESQL_POSTGRES_PASSWORD: postgres
      POSTGRESQL_USERNAME: senzing
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USERNAME:-postgres}"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    image: bitnami/postgresql@sha256:e419a8dc57d7e455e181682a51337cef6f828754656ea1d5cebaf8a225f15b55
    networks:
      - senzing
    ports:
      - 5432:5432
    restart: always

  pgadmin:
    container_name: senzing-pgadmin
    depends_on:
      - makefile
    environment:
      # See https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
      PGADMIN_CONFIG_DEFAULT_SERVER: '"0.0.0.0"'
      PGADMIN_CONFIG_LOGIN_BANNER: |-
        "<h4>Senzing demonstration</h4>
        Although pgAdmin can be configured for security,
        <br/>the following credentials are used for demonstration.
        <ul>
          <li><b>Username:</b> postgres@postgres.com</li>
          <li><b>Password:</b> password</li>
        </ul>"
      PGADMIN_DEFAULT_EMAIL: postgres@postgres.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_SERVER_JSON_FILE: /var/lib/pgadmin/storage/postgres_postgres.com/servers.json
    image: dpage/pgadmin4@sha256:d115bcd737940a6cfb61a54439d50de8b850e0782e2363102c9fa761f4022f49
    networks:
      - senzing
    ports:
      - 9171:80
      - 9172:443
    restart: always
    user: "${SENZING_UID:-1001}:0"
    volumes:
      - /tmp:/var/lib/pgadmin/storage

  postgres-init:
    container_name: senzing-postgres-init
    depends_on:
      - postgres
    environment:
      SENZING_TOOLS_DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/G2/?sslmode=disable"
      SENZING_TOOLS_DATASOURCES: "CUSTOMERS, REFERENCE, WATCHLIST"
    image: senzing/init-database@sha256:4a7b6c887b9c012d4e2ce32517ea94023d41549ec852f4fa59b5bd2341e9aa54
    networks:
      - senzing
    restart: on-failure

networks:
  senzing:
    name: ${SENZING_DOCKER_NETWORK:-senzing}
