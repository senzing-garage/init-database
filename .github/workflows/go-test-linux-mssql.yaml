name: Go test linux - mssql

on:
  push:
  pull_request:
    branches: [main]
  schedule:
    - cron: "15 7 * * *"

env:
  SENZING_LOG_LEVEL: TRACE
  SENZING_TOOLS_DATABASE_URL: "mssql://sa:Passw0rd@localhost:1433/G2/?TrustServerCertificate=yes"
  UBUNTU_VERSION: "24.04"

permissions:
  contents: read

jobs:
  go-test-linux:
    name: "Go test with Senzing: ${{ matrix.senzingsdk-version }}; OS: ${{ matrix.os }}; Go: ${{ matrix.go }} - mssql"
    outputs:
      status: ${{ job.status }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: ["1.24"]
        os: [ubuntu-latest]
        senzingsdk-version: [staging-v4]

    services:
      mssql:
        # https://mcr.microsoft.com/en-us/artifact/mar/mssql/server
        env:
          ACCEPT_EULA: Y
          MSSQL_PID: Developer
          MSSQL_SA_PASSWORD: Passw0rd
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
          - 1433:1433

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup go ${{ matrix.go }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy rootfs files
        run: |
          sudo cp --verbose --recursive rootfs/* /
          sudo cp --verbose --recursive testdata/mssql/rootfs/* /

      - name: Install dependencies
        run: |
          sudo apt-get install -y \
            libgssapi-krb5-2 \
            unixodbc \
            wget

      - name: Install MS SQL libraries
        run: |
          wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
          # sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
          sudo install -D -o root -g root -m 644 packages.microsoft.gpg /usr/share/keyrings/microsoft-prod.gpg
          curl -sSL -O "https://packages.microsoft.com/config/ubuntu/${UBUNTU_VERSION}/packages-microsoft-prod.deb"
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18
          sudo apt-get install -y unixodbc-dev
          rm packages-microsoft-prod.deb

      - name: Install Senzing SDK
        uses: senzing-factory/github-action-install-senzing-sdk@v3
        with:
          packages-to-install: "senzingsdk-runtime senzingsdk-setup"
          senzingsdk-repository-package: ${{ secrets.SENZING_APT_BETA_STAGING_REPOSITORY_PACKAGE }}
          senzingsdk-repository-path: ${{ secrets.SENZING_APT_BETA_STAGING_REPOSITORY_URL }}

      - name: Create database
        run: |
          /opt/mssql-tools18/bin/sqlcmd -C -P "Passw0rd" -Q "CREATE DATABASE G2" -S "localhost,1433" -U "sa"

      - name: Run go test
        run: |
          export SENZING_PATH="/opt/senzing"
          export LD_LIBRARY_PATH="${SENZING_PATH}/er/lib"
          export ODBCINI="/opt/microsoft/msodbcsql18/etc/odbc.ini"
          export ODBCSYSINI="/opt/microsoft/msodbcsql18/etc"
          go test -json -v -p 1 ./... 2>&1 | tee /tmp/gotest.log | gotestfmt

  slack-notification:
    needs: [go-test-linux]
    if: ${{ always() && contains(fromJSON('["failure", "cancelled"]'), needs.go-test-linux.outputs.status ) && (github.ref_name == github.event.repository.default_branch || github.event_name == 'schedule') }}
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    uses: senzing-factory/build-resources/.github/workflows/build-failure-slack-notification.yaml@v2
    with:
      job-status: ${{ needs.go-test-linux.outputs.status }}
